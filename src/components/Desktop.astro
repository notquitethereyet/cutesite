---
import DesktopIcon from './DesktopIcon.astro';
import DarkModeToggle from './DarkModeToggle.astro';
import Window from './Window.astro';
import CherryBlossoms from './CherryBlossoms.astro';
import { userName, userTagline, currentYear } from '../utils/siteConfig';

// User information variables
// const userName = "quiet";
// const userTagline = "Art, Tech and Everything Cute";
// const currentYear = new Date().getFullYear();
---

<div class="flex flex-col h-screen relative bg-background dark:bg-background-dark">
  <!-- Sakura branch decoration -->
  <div class="sakura-decoration">
    <img src="/images/sakura.png" alt="Sakura branch decoration">
  </div>
  
  <!-- Cherry blossoms animation -->
  <CherryBlossoms />
  
  <!-- Top bar with controls -->
  <div class="absolute top-2.5 left-2.5 z-10">
    <DarkModeToggle />
  </div>

  <!-- Main desktop area -->
  <div class="flex-1 flex flex-col justify-center items-center p-5">
    <!-- Desktop area is now empty as icons are moved to the home window -->
  </div>

  <!-- Windows container (windows will be created dynamically) -->
  <div id="windows-container" class="absolute top-0 left-0 w-full h-full pointer-events-none"></div>

  <!-- Footer -->
  <div class="absolute bottom-0 left-0 w-full p-4 flex flex-col items-center">
    <div class="text-sm text-text dark:text-text-dark opacity-80 z-10">&copy; {currentYear} {userName}</div>
  </div>
</div>

<!-- Home window (visible on load) -->
<Window id="home" title="home">
  <div class="text-center mb-10">
    <h1 class="text-5xl mb-3 text-text dark:text-text-dark" style="text-shadow: 2px 2px 0px rgba(255, 255, 255, 0.2);">hi! i'm <span class="text-secondary dark:text-accent-dark relative inline-block after:content-[''] after:absolute after:-bottom-1 after:left-0 after:w-full after:h-0.5 after:bg-secondary dark:after:bg-accent-dark after:opacity-70 after:rounded-lg">{userName}</span></h1>
    <h2 class="text-2xl font-normal text-text dark:text-text-dark">{userTagline}</h2>
  </div>

  <!-- Desktop icons inside the window -->
  <div class="flex justify-center gap-12 flex-wrap mt-12">
    <DesktopIcon id="about" name="about" />
    <DesktopIcon id="links" name="links" />
    <DesktopIcon id="work" name="work" />
    <DesktopIcon id="faq" name="faq" />
  </div>
</Window>

<!-- Window template for dynamic content -->
<template id="window-template">
  <Window id="" title="" isTemplate={true} />
</template>

<script>
  import { initIcons, initDarkModeToggle } from '../utils/iconManager';
  import { repositionWindows } from '../utils/windowManager';
  import { initTouchSupport } from '../utils/touchSupport';
  import { initAudio } from '../utils/audioManager';

  // Initialize dark mode state
  let isDarkMode: boolean = false;

  // Check for saved preference
  const savedDarkMode = localStorage.getItem('darkMode');
  if (savedDarkMode !== null) {
    isDarkMode = savedDarkMode === 'true';
  } else {
    // Default to user's system preference
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    isDarkMode = prefersDark;
    localStorage.setItem('darkMode', String(prefersDark));
  }

  // Apply dark mode class if needed
  if (isDarkMode) {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    initDarkModeToggle();
    initIcons();
    initTouchSupport();
    initAudio(); // Initialize audio functionality

    // Position windows in the center initially
    window.addEventListener('resize', repositionWindows);

    // Show home window on load
    const homeWindow = document.getElementById('home-window');
    if (homeWindow) {
      setTimeout(() => {
        homeWindow.classList.add('active');
        // Set a base z-index for the home window
        // Other windows will appear in front of it
        homeWindow.style.zIndex = '5';

        // Ensure home window title bar has solid background color
        const homeTitleBar = homeWindow.querySelector('.bg-secondary') as HTMLElement;
        if (homeTitleBar) {
          homeTitleBar.style.backgroundColor = getComputedStyle(document.documentElement).getPropertyValue('--window-title-bg');
        }
      }, 300);
    }
  });
</script>
